// <auto-generated />
using B2B.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace B2B.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("B2B.Api.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("category_description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("category_name");

                    b.HasKey("Id")
                        .HasName("pk_category_id");

                    b.HasIndex("Name")
                        .HasDatabaseName("idx_category_name");

                    b.ToTable("categories", "production");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Electronic gadgets and devices",
                            Name = "Electronics"
                        });
                });

            modelBuilder.Entity("B2B.Api.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("product_brand");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("product_description");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("product_image_url");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("product_is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("product_name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("product_price");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("product_sku");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int")
                        .HasColumnName("product_stock_quantity");

                    b.Property<int>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("store_id");

                    b.HasKey("Id")
                        .HasName("pk_product_id");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("idx_product_category_id");

                    b.HasIndex("Sku")
                        .HasDatabaseName("idx_product_sku");

                    b.HasIndex("StoreId")
                        .HasDatabaseName("idx_product_store_id");

                    b.ToTable("products", "production");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "LogiTech",
                            CategoryId = 1,
                            Description = "Ergonomic wireless mouse",
                            ImageUrl = "https://example.com/mouse.jpg",
                            IsActive = true,
                            Name = "Wireless Mouse",
                            Price = 24.99m,
                            Sku = "LOG-MSE-001",
                            StockQuantity = 100,
                            StoreId = 1
                        });
                });

            modelBuilder.Entity("B2B.Api.Entities.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("store_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("store_address");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("store_contact_email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("store_name");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("store_phone_number");

                    b.HasKey("Id")
                        .HasName("pk_store_id");

                    b.HasIndex("Name")
                        .HasDatabaseName("idx_store_name");

                    b.ToTable("stores", "production");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Commerce Rd",
                            ContactEmail = "info@wholesalecentral.com",
                            Name = "Wholesale Central",
                            PhoneNumber = "555-1234"
                        });
                });

            modelBuilder.Entity("B2B.Api.Entities.Product", b =>
                {
                    b.HasOne("B2B.Api.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_product_category_id");

                    b.HasOne("B2B.Api.Entities.Store", "Store")
                        .WithMany("Products")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_product_store_id");

                    b.Navigation("Category");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("B2B.Api.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("B2B.Api.Entities.Store", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
